import org.gradle.internal.os.OperatingSystem;

apply plugin: 'java'
apply plugin: 'war'

project.webAppDirName = 'WebContent'

sourceSets {
	main.java.srcDirs = ['server', 'client/java', 'submodules/snake/src']    
    client.java.srcDirs = ['client/java']
	standalone.java.srcDirs = ['standalone']
}

repositories {
    mavenCentral()
}

dependencies {
    //idk why both of these are needed or why my code uses non-documented tomcat only API, I'll fix it later
    providedCompile group: 'javax', name: 'javaee-api', version:'7.0'
	
	compile group: 'javax.servlet', name: 'jstl', version: '1.2'
	
	compile group: 'javax', name: 'javaee-api', version:'7.0'
	
	clientCompileOnly sourceSets.main.output
	standaloneCompileOnly sourceSets.main.output
}

task clientPython(type: Zip) {
	archiveName 'script-wars-python.zip'
	
	from "client/python";
	destinationDir = file("$buildDir/war/static")
}

task clientJar(type: Jar) {
	archiveName 'script-wars-client.jar'

    from sourceSets.client.output
	destinationDir = file("$buildDir/war/static")
}

task standaloneJar(type: Jar) {
	archiveName 'standaloneJudge.jar'

	from sourceSets.standalone.output 
	from sourceSets.main.output
	destinationDir = file("$buildDir/libs")

	manifest {
        attributes("Main-Class": "brownshome.scriptwars.standalone.StandaloneJudge")
    }
}

task copyWar(dependsOn: war, type: Copy) {
	from "$buildDir/libs/ROOT.war"
	into "$System.env.CATALINA_HOME/webapps"
}

task startTomcat(dependsOn: copyWar, type: Exec) {
	description 'Starts a tomcat server using $CATALINA_HOME'

    if(OperatingSystem.current().isWindows()) {
        executable "$System.env.CATALINA_HOME/bin/catalina.bat"
    } else {
        executable "$System.env.CATALINA_HOME/bin/catalina.sh"
    }
    
    args 'start'
}

task deploy(type: Zip) {
	from "$buildDir/libs/ROOT.war"
	from "clean.sh"
	from "appspec.yml"

	archiveName "deploy.zip"
	
	destinationDir = file("$buildDir/deploy")
	
	fileMode = 777
}

check {
	dependsOn war
	dependsOn deploy
}

javadoc {
	source = [sourceSets.main.allJava]
	destinationDir = file("$docsDir/doc")
	
	configure(options) {
		links = [ 'http://download.oracle.com/javase/8/docs/api/', 'http://download.oracle.com/javaee/7/api/' ]
	}
}

war {
	dependsOn clientJar
	dependsOn clientPython
	dependsOn javadoc
	
	archiveName 'ROOT.war'
	
	from "$project.docsDir"
	from "$project.buildDir/war/"
}
